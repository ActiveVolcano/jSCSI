/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class OpenISCSIBench */

#ifndef _Included_OpenISCSIBench
#define _Included_OpenISCSIBench
#ifdef __cplusplus
extern "C" {
#endif
#undef OpenISCSIBench_RUNS
#define OpenISCSIBench_RUNS 1L
#undef OpenISCSIBench_NUMBER_OF_BLOCKS
#define OpenISCSIBench_NUMBER_OF_BLOCKS 100L
#undef OpenISCSIBench_FAKE_READ
#define OpenISCSIBench_FAKE_READ 0L
/*
 * Class:     OpenISCSIBench
 * Method:    openDevice
 * Signature: (Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_OpenISCSIBench_openDevice
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     OpenISCSIBench
 * Method:    closeDevice
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_OpenISCSIBench_closeDevice
  (JNIEnv *, jobject);

/*
 * Class:     OpenISCSIBench
 * Method:    nativeReadBlock
 * Signature: (J[BZ)V
 */
JNIEXPORT void JNICALL Java_OpenISCSIBench_nativeReadBlock
  (JNIEnv *, jobject, jlong, jbyteArray, jboolean);

/*
 * Class:     OpenISCSIBench
 * Method:    nativeWriteBlock
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_OpenISCSIBench_nativeWriteBlock
  (JNIEnv *, jobject, jlong, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
