<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="77" tokens="163">
<file line="116" path="/Users/sebi/Dropbox/github/jscsi/bundles/commons/src/main/java/org/jscsi/parser/nop/NOPInParser.java"/>
<file line="112" path="/Users/sebi/Dropbox/github/jscsi/bundles/commons/src/main/java/org/jscsi/parser/nop/NOPOutParser.java"/>
<codefragment>
<![CDATA[
        this.targetTransferTag = targetTransferTag;
    }

    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------

    /** {@inheritDoc} */
    @Override
    public final String toString() {

        final StringBuilder sb = new StringBuilder(Constants.LOG_INITIAL_SIZE);
        Utils.printField(sb, "LUN", logicalUnitNumber, 1);
        Utils.printField(sb, "Target Transfer Tag", targetTransferTag, 1);
        sb.append(super.toString());

        return sb.toString();
    }

    /** {@inheritDoc} */
    @Override
    public final DataSegmentFormat getDataSegmentFormat() {

        return DataSegmentFormat.BINARY;
    }

    /** {@inheritDoc} */
    @Override
    public final void clear() {

        super.clear();

        targetTransferTag = 0x00000000;
    }

    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------

    /** {@inheritDoc} */
    @Override
    protected final void deserializeBytes1to3(final int line) throws InternetSCSIException {

        Utils.isReserved(line & Constants.LAST_THREE_BYTES_MASK);
    }

    /** {@inheritDoc} */
    @Override
    protected final void deserializeBytes20to23(final int line) throws InternetSCSIException {

        targetTransferTag = line;
    }

    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------

    /** {@inheritDoc} */
    @Override
    protected final void checkIntegrity() throws InternetSCSIException {

        // do nothing...
    }

    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------

    /** {@inheritDoc} */
    @Override
    protected final int serializeBytes20to23() {

        return targetTransferTag;
    }

    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------

}
]]>
</codefragment>
</duplication>
<duplication lines="50" tokens="121">
<file line="64" path="/Users/sebi/Dropbox/github/jscsi/bundles/commons/src/main/java/org/jscsi/parser/text/TextRequestParser.java"/>
<file line="64" path="/Users/sebi/Dropbox/github/jscsi/bundles/commons/src/main/java/org/jscsi/parser/text/TextResponseParser.java"/>
<codefragment>
<![CDATA[
    public TextRequestParser(final ProtocolDataUnit initProtocolDataUnit) {

        super(initProtocolDataUnit);
    }

    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------

    /** {@inheritDoc} */
    @Override
    public final String toString() {

        final StringBuilder sb = new StringBuilder(Constants.LOG_INITIAL_SIZE);

        Utils.printField(sb, "Continue Flag", continueFlag, 1);
        Utils.printField(sb, "LUN", logicalUnitNumber, 1);
        Utils.printField(sb, "Target Transfer Tag", targetTransferTag, 1);
        sb.append(super.toString());

        return sb.toString();
    }

    /** {@inheritDoc} */
    @Override
    public final DataSegmentFormat getDataSegmentFormat() {

        return DataSegmentFormat.TEXT;
    }

    /** {@inheritDoc} */
    @Override
    public final void clear() {

        super.clear();

        continueFlag = false;
        targetTransferTag = 0x00000000;
    }

    // --------------------------------------------------------------------------
    // --------------------------------------------------------------------------

    /**
     * Sets the Target Transfer Tag to a new one.
     * 
     * @param newTargetTransferTag
     *            The new Target Transfer Tag.
     * @see #getTargetTransferTag()
     */
    public final void setTargetTransferTag(final int newTargetTransferTag) {
]]>
</codefragment>
</duplication>
</pmd-cpd>